{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\moete\\\\Desktop\\\\itlogger\\\\it-logger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\moete\\\\Desktop\\\\itlogger\\\\it-logger\\\\src\\\\components\\\\logs\\\\EditLogModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport TechSelectOptions from '../techs/TechSelectOptions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { updateLog } from '../../actions/logActions';\n\nconst EditLogModal = ({\n  current,\n  updateLog\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        attention = _useState4[0],\n        setAttention = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        tech = _useState6[0],\n        setTech = _useState6[1];\n\n  useEffect(() => {\n    if (current) {\n      setMessage(current.message);\n      setAttention(current.attention);\n      setTech(current.tech);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({\n        html: 'Please enter a message and tech'\n      });\n    } else {\n      const updLog = {\n        id: current.id,\n        message,\n        attention,\n        tech,\n        date: new Date()\n      };\n      updateLog(updLog);\n      M.toast({\n        html: \"Log updated by \".concat(tech)\n      }); // Clear Fields\n\n      setMessage('');\n      setTech('');\n      setAttention(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    id: \"edit-log-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Enter System Log\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"message\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"tech\",\n    value: tech,\n    className: \"browser-default\",\n    onChange: e => setTech(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Select Technician\"), React.createElement(TechSelectOptions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    checked: attention,\n    value: attention,\n    onChange: e => setAttention(!attention),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Needs Attention\")))))), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#!\",\n    onClick: onSubmit,\n    className: \"modal-close waves-effect blue waves-light btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Enter\")));\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%'\n};\nEditLogModal.propTypes = {\n  current: PropTypes.object,\n  updateLog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  current: state.log.current\n});\n\nexport default connect(mapStateToProps, {\n  updateLog\n})(EditLogModal);","map":{"version":3,"sources":["C:\\Users\\moete\\Desktop\\itlogger\\it-logger\\src\\components\\logs\\EditLogModal.js"],"names":["React","useState","useEffect","TechSelectOptions","connect","PropTypes","M","updateLog","EditLogModal","current","message","setMessage","attention","setAttention","tech","setTech","onSubmit","toast","html","updLog","id","date","Date","modalStyle","e","target","value","width","height","propTypes","object","func","isRequired","mapStateToProps","state","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TechSelectOptions from '../techs/TechSelectOptions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { updateLog } from '../../actions/logActions';\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setMessage(current.message);\r\n      setAttention(current.attention);\r\n      setTech(current.tech);\r\n    }\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and tech' });\r\n    } else {\r\n      const updLog = {\r\n        id: current.id,\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date()\r\n      };\r\n\r\n      updateLog(updLog);\r\n      M.toast({ html: `Log updated by ${tech}` });\r\n\r\n      // Clear Fields\r\n      setMessage('');\r\n      setTech('');\r\n      setAttention(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\r\n      <div className='modal-content'>\r\n        <h4>Enter System Log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={e => setMessage(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={e => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  className='filled-in'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={e => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='modal-close waves-effect blue waves-light btn'\r\n        >\r\n          Enter\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  height: '75%'\r\n};\r\n\r\nEditLogModal.propTypes = {\r\n  current: PropTypes.object,\r\n  updateLog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  current: state.log.current\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateLog }\r\n)(EditLogModal);\r\n"]},"metadata":{},"sourceType":"module"}